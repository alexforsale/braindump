<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Braindump</title>
    <link>/braindump/</link>
    <description>Recent content on Braindump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Aug 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="/braindump/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>khal</title>
      <link>/braindump/posts/2025-08-01_08-07-10-khal/</link>
      <pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-08-01_08-07-10-khal/</guid>
      <description>&lt;h2 id=&#34;khal&#34;&gt;Khal&lt;/h2&gt;
&lt;p&gt;Khal is a standards based CLI and terminal calendar program, able to synchronize with CalDAV servers through &lt;a href=&#34;/braindump/posts/2025-08-01_07-54-31-vdirsyncer/&#34;&gt;vdirsyncer&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;configuration&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;code-snippet--khal&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cfg&#34; data-lang=&#34;cfg&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[calendars]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[[personal]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/home/alexforsale/.calendars/*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;discover&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;auto&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[locale]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;timeformat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;%H:%M&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;dateformat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;%Y-%m-%d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;longdateformat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;%Y-%m-%d %a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;datetimeformat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;%Y-%m-%d %H:%M&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;longdatetimeformat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;%Y-%m-%d %H:%M&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[default]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;default_calendar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;alexarians@gmail.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;src-block-caption&#34;&gt;
  &lt;span class=&#34;src-block-number&#34;&gt;&lt;a href=&#34;#code-snippet--khal&#34;&gt;Code Snippet 1&lt;/a&gt;:&lt;/span&gt;
  khal configuration
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Molecular Notes: Principles · Reasonable Deviations</title>
      <link>/braindump/post/molecular_notes_principles_reasonable_deviations/</link>
      <pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/post/molecular_notes_principles_reasonable_deviations/</guid>
      <description>&lt;h2 id=&#34;second-brain&#34;&gt;Second brain&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Another &lt;a href=&#34;/braindump/posts/2025-08-01_16-54-26-personal_knowledge_management/&#34;&gt;personal knowledge management&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://reasonabledeviations.com/2022/04/18/molecular-notes-part-1/&#34;&gt;https://reasonabledeviations.com/2022/04/18/molecular-notes-part-1/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Personal knowledge management</title>
      <link>/braindump/posts/2025-08-01_16-54-26-personal_knowledge_management/</link>
      <pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-08-01_16-54-26-personal_knowledge_management/</guid>
      <description>&lt;p&gt;Personal knowledge management (PKM) is a process of collecting information that a person uses to gather, classify, store, search, retrieve and share knowledge in their daily activities and the way in which these processes support work activities.&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/post/molecular_notes_principles_reasonable_deviations/&#34;&gt;Molecular Notes: Principles · Reasonable Deviations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/2025-08-01_16-50-28-zettelkasten/&#34;&gt;zettelkasten&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>rust cargo</title>
      <link>/braindump/posts/2025-08-01_15-45-44-rust_cargo/</link>
      <pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-08-01_15-45-44-rust_cargo/</guid>
      <description>&lt;h2 id=&#34;cargo&#34;&gt;Cargo&lt;/h2&gt;
&lt;p&gt;Cargo is the &lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;Rust&lt;/a&gt; package manager. Cargo downloads your Rust package’s dependencies, compiles your packages, makes distributable packages, and uploads them to crates.io, the Rust community’s package registry. You can contribute to this book on GitHub.&lt;/p&gt;</description>
    </item>
    <item>
      <title>vdirsyncer</title>
      <link>/braindump/posts/2025-08-01_07-54-31-vdirsyncer/</link>
      <pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-08-01_07-54-31-vdirsyncer/</guid>
      <description>&lt;h2 id=&#34;vdirsyncer&#34;&gt;vdirsyncer&lt;/h2&gt;
&lt;p&gt;Vdirsyncer is a command-line tool for synchronizing calendars and addressbooks between a variety of servers and the local filesystem. The most popular usecase is to synchronize a server with a local folder and use a set of other programs to change the local events and contacts. Vdirsyncer can then synchronize those changes back to the server.&lt;/p&gt;
&lt;h2 id=&#34;config&#34;&gt;config&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;code-snippet--vdirsyncer&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cfg&#34; data-lang=&#34;cfg&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# An example configuration for vdirsyncer.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Move it to ~/.vdirsyncer/config or ~/.config/vdirsyncer/config and edit it.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Run `vdirsyncer --help` for CLI usage.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Optional parameters are commented out.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# This file doesn&amp;#39;t document all available parameters, see&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# http://vdirsyncer.pimutils.org/ for the rest of them.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[general]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# A folder where vdirsyncer can store some metadata about each pair.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;status_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;~/.local/share/vdirsyncer/status/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# CARDDAV&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[pair alexarians_contacts]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# A `[pair &amp;lt;name&amp;gt;]` block defines two storages `a` and `b` that should be&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# synchronized. The definition of these storages follows in `[storage &amp;lt;name&amp;gt;]`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# blocks. This is similar to accounts in OfflineIMAP.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;alexarians_contacts_local&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;alexarians_contacts_remote&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Synchronize all collections that can be found.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# You need to run `vdirsyncer discover` if new calendars/addressbooks are added&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# on the server.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;collections&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;[&amp;#34;from a&amp;#34;, &amp;#34;from b&amp;#34;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Synchronize the &amp;#34;display name&amp;#34; property into a local file (~/.contacts/displayname).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;metadata&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;[&amp;#34;displayname&amp;#34;, &amp;#34;description&amp;#34;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# To resolve a conflict the following values are possible:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#   `null` - abort when collisions occur (default)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#   `&amp;#34;a wins&amp;#34;` - assume a&amp;#39;s items to be more up-to-date&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#   `&amp;#34;b wins&amp;#34;` - assume b&amp;#39;s items to be more up-to-date&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#conflict_resolution = null&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[storage alexarians_contacts_local]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# A storage references actual data on a remote server or on the local disk.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Similar to repositories in OfflineIMAP.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;filesystem&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;~/.contacts/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;fileext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;.vcf&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[storage alexarians_contacts_remote]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;google_contacts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;token_file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;~/.local/share/vdirsyncer/google_contacts_token&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;client_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;Client ID from Google developer console&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;client_secret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;Client secret from Google developer console&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#username =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# The password can also be fetched from the system password storage, netrc or a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# custom command. See http://vdirsyncer.pimutils.org/en/stable/keyring.html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#password =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# CALDAV&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[pair alexarians_calendar]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;alexarians_calendar_local&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;alexarians_calendar_remote&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;collections&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;[&amp;#34;from a&amp;#34;, &amp;#34;from b&amp;#34;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Calendars also have a color property&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;metadata&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;[&amp;#34;displayname&amp;#34;, &amp;#34;color&amp;#34;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[storage alexarians_calendar_local]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;filesystem&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;~/.calendars/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;fileext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;.ics&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[storage alexarians_calendar_remote]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;google_calendar&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;token_file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;~/.local/share/vdirsyncer/google_calendar_token&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;client_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;Client ID from Google developer console&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;client_secret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;Client secret from Google developer console&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#url = &amp;#34;https://owncloud.example.com/remote.php/caldav/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#username =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#password =&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;src-block-caption&#34;&gt;
  &lt;span class=&#34;src-block-number&#34;&gt;&lt;a href=&#34;#code-snippet--vdirsyncer&#34;&gt;Code Snippet 1&lt;/a&gt;:&lt;/span&gt;
  vdirsyncer configuration
&lt;/div&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/2025-08-01_08-07-10-khal/&#34;&gt;khal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>zettelkasten</title>
      <link>/braindump/posts/2025-08-01_16-50-28-zettelkasten/</link>
      <pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-08-01_16-50-28-zettelkasten/</guid>
      <description>&lt;h2 id=&#34;zettelkasten&#34;&gt;Zettelkasten&lt;/h2&gt;
&lt;p&gt;A &lt;em&gt;Zettelkasten&lt;/em&gt; (German: &amp;lsquo;slipbox&amp;rsquo;, plural &lt;em&gt;Zettelkästen&lt;/em&gt;) or card file consists of small items of information stored on &lt;em&gt;Zetteln&lt;/em&gt; (German: &amp;lsquo;slips&amp;rsquo;), paper slips or cards, that may be linked to each other through subject headings or other metadata such as numbers and tags. It has often been used as a system of note-taking and &lt;a href=&#34;/braindump/posts/2025-08-01_16-54-26-personal_knowledge_management/&#34;&gt;personal knowledge management&lt;/a&gt; for research, study, and writing.&lt;/p&gt;
&lt;p&gt;This is the basis for &lt;a href=&#34;/braindump/posts/2025-07-31_20-53-56-org_roam/&#34;&gt;org-roam&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>i3 website</title>
      <link>/braindump/post/i3_i3_improved_tiling_x11_window_manager/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/post/i3_i3_improved_tiling_x11_window_manager/</guid>
      <description>&lt;h2 id=&#34;official-i3wm-website&#34;&gt;Official i3wm website&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;/braindump/posts/2025-07-31_22-13-46-i3wm/&#34;&gt;i3wm&lt;/a&gt; tiling window manager.&lt;/p&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://i3wm.org/&#34;&gt;https://i3wm.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>i3wm</title>
      <link>/braindump/posts/2025-07-31_22-13-46-i3wm/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_22-13-46-i3wm/</guid>
      <description>&lt;p&gt;i3 is a tiling &lt;a href=&#34;/braindump/posts/2025-07-31_22-15-27-window_manager/&#34;&gt;window manager&lt;/a&gt;, completely written from scratch. The target platforms are &lt;a href=&#34;/braindump/posts/20240222232402-linux/&#34;&gt;GNU/Linux&lt;/a&gt; and BSD operating systems, our code is Free and Open Source Software (FOSS) under the BSD license. i3 is primarily targeted at advanced users and developers. Based upon the experiences we made when wanting to hack/fix wmii, we agreed upon the following goals for i3:&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/post/i3_i3_improved_tiling_x11_window_manager/&#34;&gt;i3 website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>libvirt</title>
      <link>/braindump/posts/2025-07-31_21-46-40-libvirt/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_21-46-40-libvirt/</guid>
      <description>&lt;h2 id=&#34;libvirt&#34;&gt;Libvirt&lt;/h2&gt;
&lt;p&gt;Libvirt is a virtualization API that provides a consistent and unified way to manage different virtualization technologies like KVM, Xen, and &lt;a href=&#34;/braindump/posts/2025-07-31_21-47-28-qemu/&#34;&gt;QEMU&lt;/a&gt;. It offers a stable API, a daemon (libvirtd), and command-line tools (like &lt;a href=&#34;/braindump/posts/2025-07-31_21-48-37-virsh/&#34;&gt;virsh&lt;/a&gt;) for managing virtual machines and other virtualization features such as storage and networking.
&lt;a href=&#34;/braindump/posts/2025-07-31_21-48-37-virsh/&#34;&gt;virsh&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/2025-07-31_21-50-34-virt_manager/&#34;&gt;virt-manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/2025-07-31_21-48-37-virsh/&#34;&gt;virsh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>org-roam</title>
      <link>/braindump/posts/2025-07-31_20-53-56-org_roam/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_20-53-56-org_roam/</guid>
      <description>A plain-text personal knowledge management system.</description>
    </item>
    <item>
      <title>qemu</title>
      <link>/braindump/posts/2025-07-31_21-47-28-qemu/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_21-47-28-qemu/</guid>
      <description>&lt;h2 id=&#34;qemu&#34;&gt;Qemu&lt;/h2&gt;
&lt;p&gt;QEMU is a free and open-source emulator and virtualizer. It allows users to run different operating systems and programs on various hardware architectures, effectively emulating a different computer system. It can be used as a standalone emulator or combined with other virtualization technologies like KVM for near-native performance.&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/2025-07-31_21-46-40-libvirt/&#34;&gt;libvirt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Rust Comments</title>
      <link>/braindump/posts/2025-07-31_19-51-32-rust_comments/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_19-51-32-rust_comments/</guid>
      <description>&lt;h2 id=&#34;comments&#34;&gt;Comments&lt;/h2&gt;
&lt;p&gt;All programmers strive to make their code easy to understand, but sometimes extra explanation is warranted. In these cases, programmers leave comments in their source code that the compiler will ignore but people reading the source code may find useful.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// hello, world
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In &lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;Rust&lt;/a&gt;, the idiomatic comment style starts a comment with two slashes, and the comment continues until the end of the line. For comments that extend beyond a single line, you’ll need to include &lt;code&gt;//&lt;/code&gt; on each line, like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rust Control Flow</title>
      <link>/braindump/posts/2025-07-31_19-53-36-rust_control_flow/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_19-53-36-rust_control_flow/</guid>
      <description>&lt;h2 id=&#34;control-flow&#34;&gt;Control Flow&lt;/h2&gt;
&lt;p&gt;The ability to run some code depending on whether a condition is &lt;code&gt;true&lt;/code&gt; and to run some code repeatedly while a condition is &lt;code&gt;true&lt;/code&gt; are basic building blocks in most programming languages. The most common constructs that let you control the flow of execution of &lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;Rust&lt;/a&gt; code are if expressions and loops.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rust Enums</title>
      <link>/braindump/posts/2025-07-31_20-06-17-rust_enums/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_20-06-17-rust_enums/</guid>
      <description>&lt;h2 id=&#34;defining-enum&#34;&gt;Defining Enum&lt;/h2&gt;
&lt;p&gt;Where &lt;em&gt;structs&lt;/em&gt; give you a way of grouping together related fields and data, like a &lt;code&gt;Rectangle&lt;/code&gt; with its width and height, &lt;em&gt;enums&lt;/em&gt; give you a way of saying a value is one of a possible set of values. For example, we may want to say that &lt;code&gt;Rectangle&lt;/code&gt; is one of a set of possible shapes that also includes &lt;code&gt;Circle&lt;/code&gt; and &lt;code&gt;Triangle&lt;/code&gt;. To do this, &lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;Rust&lt;/a&gt; allows us to encode these possibilities as an enum.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rust Functions</title>
      <link>/braindump/posts/2025-07-31_19-49-54-rust_functions/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_19-49-54-rust_functions/</guid>
      <description>&lt;h2 id=&#34;functions&#34;&gt;Functions&lt;/h2&gt;
&lt;p&gt;Functions are prevalent in &lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;Rust&lt;/a&gt; code. You’ve already seen one of the most important functions in the language: the &lt;code&gt;main&lt;/code&gt; function, which is the entry point of many programs. You’ve also seen the &lt;code&gt;fn&lt;/code&gt; keyword, which allows you to declare new functions.&lt;/p&gt;
&lt;p&gt;Rust code uses &lt;em&gt;snake case&lt;/em&gt; as the conventional style for function and variable names, in which all letters are lowercase and underscores separate words. Here’s a program that contains an example function definition:&lt;/p&gt;</description>
    </item>
    <item>
      <title>rust match</title>
      <link>/braindump/posts/2025-07-31_21-58-20-rust_match_control_flow_construct/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_21-58-20-rust_match_control_flow_construct/</guid>
      <description>&lt;h2 id=&#34;match-control-flow-construct&#34;&gt;&lt;code&gt;match&lt;/code&gt; Control flow construct&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;Rust&lt;/a&gt; has an extremely powerful control flow construct called &lt;code&gt;match&lt;/code&gt; that allows you to compare a value against a series of patterns and then execute code based on which pattern matches. Patterns can be made up of literal values, variable names, wildcards, and many other things.&lt;/p&gt;
&lt;p&gt;Think of a match expression as being like a coin-sorting machine: coins slide down a track with variously sized holes along it, and each coin falls through the first hole it encounters that it fits into. In the same way, values go through each pattern in a &lt;code&gt;match&lt;/code&gt;, and at the first pattern the value “fits,” the value falls into the associated code block to be used during execution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rust Ownership</title>
      <link>/braindump/posts/2025-07-31_20-04-32-rust_ownership/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_20-04-32-rust_ownership/</guid>
      <description>&lt;h2 id=&#34;understanding-ownership&#34;&gt;Understanding Ownership&lt;/h2&gt;
&lt;p&gt;Ownership is &lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;Rust&lt;/a&gt;’s most unique feature and has deep implications for the rest of the language. It enables Rust to make memory safety guarantees without needing a garbage collector, so it’s important to understand how ownership works. In this chapter, we’ll talk about ownership as well as several related features: borrowing, slices, and how Rust lays data out in memory.&lt;/p&gt;</description>
    </item>
    <item>
      <title>rust resources</title>
      <link>/braindump/posts/2025-07-31_22-50-41-rust_resources/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_22-50-41-rust_resources/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;Rust&lt;/a&gt; free and online resources&lt;/p&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@letsgetrusty&#34;&gt;https://www.youtube.com/@letsgetrusty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>rust variables</title>
      <link>/braindump/posts/2025-07-31_19-14-21-rust_variables/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_19-14-21-rust_variables/</guid>
      <description>&lt;h2 id=&#34;immutable&#34;&gt;Immutable&lt;/h2&gt;
&lt;p&gt;By default &lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;rust&lt;/a&gt; variables are immutable. Once a value is bound to a name, you can’t change that value. We can make a mutable variable using the keyword &lt;code&gt;mut&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fn&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;mut&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;println!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The value of x is: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{x}&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;println!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The value of x is: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{x}&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The value of x is: 5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The value of x is: 6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;constant-dot&#34;&gt;Constant.&lt;/h2&gt;
&lt;p&gt;Like immutable variables, constants are values that are bound to a name and are not allowed to change, but there are a few differences between constants and variables. First, you aren’t allowed to use &lt;code&gt;mut&lt;/code&gt; with constants. Constants aren’t just immutable by default—they’re always immutable. You declare constants using the &lt;code&gt;const&lt;/code&gt; keyword instead of the let keyword, and the type of the value must be annotated. We’ll cover types and type annotations in the next section, “&lt;a href=&#34;/braindump/posts/2025-07-29_00-36-29-rust_data_types/&#34;&gt;Data Types&lt;/a&gt;”, so don’t worry about the details right now. Just know that you must always annotate the type.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Template expansion (The Org Manual)</title>
      <link>/braindump/posts/template_expansion_the_org_manual/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/template_expansion_the_org_manual/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;/braindump/posts/20240221124747-org_mode/&#34;&gt;Org-mode&lt;/a&gt; capture template expansion&lt;/p&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://orgmode.org/manual/Template-expansion.html&#34;&gt;https://orgmode.org/manual/Template-expansion.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>virsh</title>
      <link>/braindump/posts/2025-07-31_21-48-37-virsh/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_21-48-37-virsh/</guid>
      <description>&lt;h2 id=&#34;virsh&#34;&gt;virsh&lt;/h2&gt;
&lt;p&gt;Virsh is a command-line interface (CLI) utility used for managing virtual machines (VMs) and other virtualization components, interacting with them through the &lt;a href=&#34;/braindump/posts/2025-07-31_21-46-40-libvirt/&#34;&gt;Libvirt&lt;/a&gt; virtualization API. It allows users to create, manage, and control virtual machines, as well as interact with storage pools and networks within a virtualization environment.&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/2025-07-31_21-46-40-libvirt/&#34;&gt;libvirt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/2025-07-31_21-46-40-libvirt/&#34;&gt;libvirt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>virt-manager</title>
      <link>/braindump/posts/2025-07-31_21-50-34-virt_manager/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_21-50-34-virt_manager/</guid>
      <description>&lt;h2 id=&#34;virt-manager&#34;&gt;virt-manager&lt;/h2&gt;
&lt;p&gt;virt-manager is a graphical tool, a frontend, for managing virtual machines (VMs) using &lt;a href=&#34;/braindump/posts/2025-07-31_21-46-40-libvirt/&#34;&gt;libvirt&lt;/a&gt;. It primarily works with KVM (Kernel-based Virtual Machine) but also supports Xen and LXC containers. It offers features like creating and configuring new VMs, managing existing ones, monitoring performance, and accessing virtual consoles.&lt;/p&gt;
&lt;h2 id=&#34;windows-vm&#34;&gt;Windows VM&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I can only get native resolution for &lt;a href=&#34;/braindump/posts/20240225103030-windows/&#34;&gt;windows&lt;/a&gt; vm using QXL Video mode.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>window-manager</title>
      <link>/braindump/posts/2025-07-31_22-15-27-window_manager/</link>
      <pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-31_22-15-27-window_manager/</guid>
      <description>&lt;p&gt;Window managers are &lt;a href=&#34;/braindump/posts/20240220160349-xorg/&#34;&gt;X&lt;/a&gt; clients that control the appearance and behaviour of the frames (&amp;ldquo;windows&amp;rdquo;) where the various graphical applications are drawn.&lt;/p&gt;
&lt;h2 id=&#34;types&#34;&gt;types&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;tiling window manager&lt;/li&gt;
&lt;li&gt;stacking window manager&lt;/li&gt;
&lt;li&gt;dynamic window manager&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/2025-07-31_22-13-46-i3wm/&#34;&gt;i3wm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>haskell</title>
      <link>/braindump/posts/2025-07-29_01-40-38-haskell/</link>
      <pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-29_01-40-38-haskell/</guid>
      <description>&lt;p&gt;Haskell is a general-purpose, statically typed, purely functional &lt;a href=&#34;/braindump/posts/2025-07-29_01-29-35-programming/&#34;&gt;programming&lt;/a&gt; language. It is known for its strong emphasis on functional programming principles and features like type inference and lazy evaluation.&lt;/p&gt;
&lt;h2 id=&#34;purely-functional&#34;&gt;Purely Functional&lt;/h2&gt;
&lt;p&gt;In Haskell, functions are treated as mathematical functions, meaning they always produce the same output for the same input and have no side effects (they do not modify external state).&lt;/p&gt;
&lt;h2 id=&#34;statically-typed&#34;&gt;Statically Typed&lt;/h2&gt;
&lt;p&gt;The type of variables and expressions is checked at compile time, catching many potential errors before runtime. Haskell also features strong type inference, allowing the compiler to deduce types without explicit declarations in many cases.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How I Take Notes with Org-roam</title>
      <link>/braindump/posts/how_i_take_notes_with_org_roam/</link>
      <pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/how_i_take_notes_with_org_roam/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://jethrokuan.github.io/org-roam-guide/&#34;&gt;https://jethrokuan.github.io/org-roam-guide/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;jethrokua-org-roam-configuration&#34;&gt;jethrokua Org-roam configuration&lt;/h2&gt;
&lt;h2 id=&#34;next-implement-this&#34;&gt;NEXT Implement this&lt;/h2&gt;
&lt;p&gt;Intricate &lt;a href=&#34;/braindump/posts/2025-07-31_20-53-56-org_roam/&#34;&gt;Org-roam&lt;/a&gt; configuration.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Org-roam User Manual</title>
      <link>/braindump/posts/org_roam_user_manual/</link>
      <pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/org_roam_user_manual/</guid>
      <description>&lt;p&gt;Testing org-roam-capture-ref-templates&lt;/p&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.orgroam.com/manual.html#org_002droam_002dprotocol&#34;&gt;https://www.orgroam.com/manual.html#org_002droam_002dprotocol&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Official &lt;a href=&#34;/braindump/posts/2025-07-31_20-53-56-org_roam/&#34;&gt;org-roam&lt;/a&gt; manual.&lt;/p&gt;</description>
    </item>
    <item>
      <title>programming</title>
      <link>/braindump/posts/2025-07-29_01-29-35-programming/</link>
      <pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-29_01-29-35-programming/</guid>
      <description>&lt;p&gt;A programming language is a formal constructed language designed to communicate instructions to a machine, particularly a computer. Programming languages are used to create computer programs, which implement algorithms.
Key characteristics and concepts of programming languages include:&lt;/p&gt;
&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;
&lt;p&gt;The set of rules that defines the combinations of symbols that are considered to be correctly structured statements or expressions in the language.&lt;/p&gt;
&lt;h2 id=&#34;semantics&#34;&gt;Semantics&lt;/h2&gt;
&lt;p&gt;The meaning of the instructions and how they are executed by the computer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>python</title>
      <link>/braindump/posts/2025-07-29_01-37-50-python/</link>
      <pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-29_01-37-50-python/</guid>
      <description>&lt;p&gt;Python is a high-level, interpreted, general-purpose programming language. It is known for its clear and readable syntax, which emphasizes code readability and reduces the cost of program maintenance.&lt;/p&gt;
&lt;p&gt;Key characteristics of Python:&lt;/p&gt;
&lt;h2 id=&#34;interpreted&#34;&gt;Interpreted&lt;/h2&gt;
&lt;p&gt;Python code is executed line by line by an interpreter, without the need for a separate compilation step. This speeds up the development process, as changes can be tested immediately.&lt;/p&gt;
&lt;h2 id=&#34;high-level&#34;&gt;High-level&lt;/h2&gt;
&lt;p&gt;Python abstracts away low-level details of computer hardware, allowing developers to focus on problem-solving rather than managing memory or system resources.&lt;/p&gt;</description>
    </item>
    <item>
      <title>rust</title>
      <link>/braindump/posts/2025-07-29_00-38-11-rust/</link>
      <pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-29_00-38-11-rust/</guid>
      <description>&lt;p&gt;Rust is a modern, general-purpose &lt;a href=&#34;/braindump/posts/2025-07-29_01-29-35-programming/&#34;&gt;programming&lt;/a&gt; language known for its emphasis on performance, memory safety, and concurrency. It is designed to build reliable and efficient software, particularly in areas where performance is critical, such as systems programming, game engines, databases, and operating systems.
Key characteristics of Rust include:&lt;/p&gt;
&lt;h2 id=&#34;performance&#34;&gt;Performance&lt;/h2&gt;
&lt;p&gt;Rust offers speed and memory efficiency without requiring a runtime or garbage collector, making it suitable for low-level systems programming.&lt;/p&gt;
&lt;h2 id=&#34;memory-safety&#34;&gt;Memory Safety&lt;/h2&gt;
&lt;p&gt;Rust&amp;rsquo;s unique ownership model and borrow checker enforce memory safety at compile time, preventing common errors like null pointer dereferences and data races without the overhead of a garbage collector.&lt;/p&gt;</description>
    </item>
    <item>
      <title>rust data types</title>
      <link>/braindump/posts/2025-07-29_00-36-29-rust_data_types/</link>
      <pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-29_00-36-29-rust_data_types/</guid>
      <description>&lt;p&gt;Data types for&lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;rust&lt;/a&gt;.
Every value in Rust is of a certain &lt;em&gt;data type&lt;/em&gt;, which tells Rust what kind of data is being specified so it knows how to work with that data.&lt;/p&gt;
&lt;p&gt;Keep in mind that Rust is a &lt;em&gt;statically typed&lt;/em&gt; language, which means that it must know the types of all variables at compile time.&lt;/p&gt;
&lt;h2 id=&#34;scalar-types&#34;&gt;Scalar Types&lt;/h2&gt;
&lt;p&gt;A &lt;em&gt;scalar type&lt;/em&gt; represents a single value. Rust has four primary scalar types: integers, floating-point numbers, Booleans, and characters. You may recognize these from other programming languages. Let’s jump into how they work in Rust.&lt;/p&gt;</description>
    </item>
    <item>
      <title>rust struct</title>
      <link>/braindump/posts/2025-07-29_05-52-54-rust_struct/</link>
      <pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-29_05-52-54-rust_struct/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;Rust&lt;/a&gt; structs are similar to tuples, in that both hold multiple related values. Like tuples, the pieces of a struct can be different types. Unlike with tuples, in a struct you’ll name each piece of data so it’s clear what the values mean. Adding these names means that structs are more flexible than tuples: you don’t have to rely on the order of the data to specify or access the values of an instance.&lt;/p&gt;</description>
    </item>
    <item>
      <title>rust vector</title>
      <link>/braindump/posts/2025-07-29_02-34-23-rust_vector/</link>
      <pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/2025-07-29_02-34-23-rust_vector/</guid>
      <description>&lt;h2 id=&#34;creating-vector-in-rust--2025-07-29-00-38-11-rust-dot-md--dot&#34;&gt;Creating vector in &lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;rust&lt;/a&gt;.&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;mut&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Vec&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;println!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{:?}&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[5, 6, 7, 8]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reading-elements-of-vectors&#34;&gt;Reading Elements of Vectors&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;vec!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;third&lt;/span&gt;: &lt;span class=&#34;kp&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;i32&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;println!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The third element is &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{third}&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;third&lt;/span&gt;: &lt;span class=&#34;nb&#34;&gt;Option&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;i32&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;third&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;third&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;println!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The third element is &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{third}&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;println!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;There is no third element.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;println!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{:?}&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The third element is 3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The third element is 3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[1, 2, 3, 4, 5]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Option&amp;lt;T&amp;gt; is an enum that represents the presence or absence of a value. It is a fundamental type in &lt;a href=&#34;/braindump/posts/2025-07-29_00-38-11-rust/&#34;&gt;Rust&lt;/a&gt;&amp;rsquo;s approach to handling nullable values and potential errors, promoting explicit handling rather than implicit null pointers found in other languages.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Blog] My Org&#43;Pandoc Workflow : r/emacs</title>
      <link>/braindump/posts/20240406031807-blog_my_org_pandoc_workflow_r_emacs/</link>
      <pubDate>Sat, 06 Apr 2024 03:18:00 +0000</pubDate>
      <guid>/braindump/posts/20240406031807-blog_my_org_pandoc_workflow_r_emacs/</guid>
      <description>Interesting org-roam graph builder</description>
    </item>
    <item>
      <title>noweb</title>
      <link>/braindump/posts/20240327210756-noweb/</link>
      <pubDate>Wed, 27 Mar 2024 21:07:00 +0000</pubDate>
      <guid>/braindump/posts/20240327210756-noweb/</guid>
      <description>noweb</description>
    </item>
    <item>
      <title>org-agenda</title>
      <link>/braindump/posts/20240319220055-org_agenda/</link>
      <pubDate>Tue, 19 Mar 2024 22:00:00 +0000</pubDate>
      <guid>/braindump/posts/20240319220055-org_agenda/</guid>
      <description>org-agenda</description>
    </item>
    <item>
      <title>perfect-number</title>
      <link>/braindump/posts/20240314090533-perfect_number/</link>
      <pubDate>Thu, 14 Mar 2024 09:05:00 +0000</pubDate>
      <guid>/braindump/posts/20240314090533-perfect_number/</guid>
      <description>perfect number</description>
    </item>
    <item>
      <title>python script examples</title>
      <link>/braindump/posts/20240314090446-python/</link>
      <pubDate>Thu, 14 Mar 2024 09:04:00 +0000</pubDate>
      <guid>/braindump/posts/20240314090446-python/</guid>
      <description>Python</description>
    </item>
    <item>
      <title>gif</title>
      <link>/braindump/posts/20240309010626-gif/</link>
      <pubDate>Sat, 09 Mar 2024 01:06:00 +0000</pubDate>
      <guid>/braindump/posts/20240309010626-gif/</guid>
      <description>gif file format</description>
    </item>
    <item>
      <title>ffmpeg</title>
      <link>/braindump/posts/20240309010317-ffmpeg/</link>
      <pubDate>Sat, 09 Mar 2024 01:03:00 +0000</pubDate>
      <guid>/braindump/posts/20240309010317-ffmpeg/</guid>
      <description>cross-platform solution to record, convert and stream audio and video.</description>
    </item>
    <item>
      <title>video formats</title>
      <link>/braindump/posts/20240309010300-video/</link>
      <pubDate>Sat, 09 Mar 2024 01:03:00 +0000</pubDate>
      <guid>/braindump/posts/20240309010300-video/</guid>
      <description>video</description>
    </item>
    <item>
      <title>audio</title>
      <link>/braindump/posts/20240309010156-audio/</link>
      <pubDate>Sat, 09 Mar 2024 01:01:00 +0000</pubDate>
      <guid>/braindump/posts/20240309010156-audio/</guid>
      <description>Audio</description>
    </item>
    <item>
      <title>windows</title>
      <link>/braindump/posts/20240225103030-windows/</link>
      <pubDate>Sun, 25 Feb 2024 10:30:00 +0000</pubDate>
      <guid>/braindump/posts/20240225103030-windows/</guid>
      <description>windows</description>
    </item>
    <item>
      <title>rust hello world</title>
      <link>/braindump/posts/20240225102813-rust/</link>
      <pubDate>Sun, 25 Feb 2024 10:28:00 +0000</pubDate>
      <guid>/braindump/posts/20240225102813-rust/</guid>
      <description>Rust</description>
    </item>
    <item>
      <title>rustup</title>
      <link>/braindump/posts/20240225102848-rustup/</link>
      <pubDate>Sun, 25 Feb 2024 10:28:00 +0000</pubDate>
      <guid>/braindump/posts/20240225102848-rustup/</guid>
      <description>rust tool</description>
    </item>
    <item>
      <title>hyprland</title>
      <link>/braindump/posts/20240225091349-hyprland/</link>
      <pubDate>Sun, 25 Feb 2024 09:13:00 +0000</pubDate>
      <guid>/braindump/posts/20240225091349-hyprland/</guid>
      <description>wayland compositor</description>
    </item>
    <item>
      <title>exchange</title>
      <link>/braindump/posts/20240223233558-exchange/</link>
      <pubDate>Fri, 23 Feb 2024 23:35:00 +0000</pubDate>
      <guid>/braindump/posts/20240223233558-exchange/</guid>
      <description>exchange</description>
    </item>
    <item>
      <title>microsoft</title>
      <link>/braindump/posts/20240223233522-microsoft/</link>
      <pubDate>Fri, 23 Feb 2024 23:35:00 +0000</pubDate>
      <guid>/braindump/posts/20240223233522-microsoft/</guid>
      <description>microsoft</description>
    </item>
    <item>
      <title>davmail</title>
      <link>/braindump/posts/20240223233349-davmail/</link>
      <pubDate>Fri, 23 Feb 2024 23:33:00 +0000</pubDate>
      <guid>/braindump/posts/20240223233349-davmail/</guid>
      <description>Exchange proxy</description>
    </item>
    <item>
      <title>systemd</title>
      <link>/braindump/posts/20240223233042-systemd/</link>
      <pubDate>Fri, 23 Feb 2024 23:30:00 +0000</pubDate>
      <guid>/braindump/posts/20240223233042-systemd/</guid>
      <description>linux init system</description>
    </item>
    <item>
      <title>pass</title>
      <link>/braindump/posts/20240223232524-pass/</link>
      <pubDate>Fri, 23 Feb 2024 23:25:00 +0000</pubDate>
      <guid>/braindump/posts/20240223232524-pass/</guid>
      <description>password management</description>
    </item>
    <item>
      <title>msmtp</title>
      <link>/braindump/posts/20240223232154-msmtp/</link>
      <pubDate>Fri, 23 Feb 2024 23:21:00 +0000</pubDate>
      <guid>/braindump/posts/20240223232154-msmtp/</guid>
      <description>msmtp</description>
    </item>
    <item>
      <title>notmuch</title>
      <link>/braindump/posts/20240223231317-notmuch/</link>
      <pubDate>Fri, 23 Feb 2024 23:13:00 +0000</pubDate>
      <guid>/braindump/posts/20240223231317-notmuch/</guid>
      <description>notmuch</description>
    </item>
    <item>
      <title>linux</title>
      <link>/braindump/posts/20240222232402-linux/</link>
      <pubDate>Thu, 22 Feb 2024 23:24:00 +0000</pubDate>
      <guid>/braindump/posts/20240222232402-linux/</guid>
      <description>operating system</description>
    </item>
    <item>
      <title>wayland</title>
      <link>/braindump/posts/20240222215322-wayland/</link>
      <pubDate>Thu, 22 Feb 2024 21:53:00 +0000</pubDate>
      <guid>/braindump/posts/20240222215322-wayland/</guid>
      <description>display server protocol</description>
    </item>
    <item>
      <title>libinput</title>
      <link>/braindump/posts/20240222213859-libinput/</link>
      <pubDate>Thu, 22 Feb 2024 21:38:00 +0000</pubDate>
      <guid>/braindump/posts/20240222213859-libinput/</guid>
      <description>a library to handle input devices in Wayland compositors and to provide a generic X.Org input driver</description>
    </item>
    <item>
      <title>org-mode</title>
      <link>/braindump/posts/20240221124747-org_mode/</link>
      <pubDate>Wed, 21 Feb 2024 12:47:00 +0000</pubDate>
      <guid>/braindump/posts/20240221124747-org_mode/</guid>
      <description>&lt;p&gt;a mode for document editing, formatting, and organizing within the free software text editor GNU Emacs  and its derivatives, designed for notes, planning, and authoring.&lt;/p&gt;
&lt;h2 id=&#34;using-property-in-headline&#34;&gt;Using Property in headline&lt;/h2&gt;
&lt;p&gt;Org-agenda will automatically show the &lt;code&gt;CATEGORY&lt;/code&gt; property if it is set.&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240319220055-org_agenda/&#34;&gt;org-agenda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/2025-07-31_20-53-56-org_roam/&#34;&gt;org-roam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/template_expansion_the_org_manual/&#34;&gt;Template expansion (The Org Manual)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240218140133-emacs/&#34;&gt;emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240327210756-noweb/&#34;&gt;noweb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240327210756-noweb/&#34;&gt;noweb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240221124553-hugo/&#34;&gt;hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240406031807-blog_my_org_pandoc_workflow_r_emacs/&#34;&gt;[Blog] My Org+Pandoc Workflow : r/emacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>hugo</title>
      <link>/braindump/posts/20240221124553-hugo/</link>
      <pubDate>Wed, 21 Feb 2024 12:45:00 +0000</pubDate>
      <guid>/braindump/posts/20240221124553-hugo/</guid>
      <description>open source static site generator</description>
    </item>
    <item>
      <title>github</title>
      <link>/braindump/posts/20240221124421-github/</link>
      <pubDate>Wed, 21 Feb 2024 12:44:00 +0000</pubDate>
      <guid>/braindump/posts/20240221124421-github/</guid>
      <description>github</description>
    </item>
    <item>
      <title>git</title>
      <link>/braindump/posts/20240221124353-git/</link>
      <pubDate>Wed, 21 Feb 2024 12:43:00 +0000</pubDate>
      <guid>/braindump/posts/20240221124353-git/</guid>
      <description>a distributed version control system</description>
    </item>
    <item>
      <title>xorg</title>
      <link>/braindump/posts/20240220160349-xorg/</link>
      <pubDate>Tue, 20 Feb 2024 16:03:00 +0000</pubDate>
      <guid>/braindump/posts/20240220160349-xorg/</guid>
      <description>Xorg</description>
    </item>
    <item>
      <title>archlinux</title>
      <link>/braindump/posts/20240220160143-archlinux/</link>
      <pubDate>Tue, 20 Feb 2024 16:01:00 +0000</pubDate>
      <guid>/braindump/posts/20240220160143-archlinux/</guid>
      <description>All about archlinux</description>
    </item>
    <item>
      <title>Archlinux</title>
      <link>/braindump/posts/20240218135841-archlinux/</link>
      <pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/20240218135841-archlinux/</guid>
      <description>&lt;h2 id=&#34;emacs-installation&#34;&gt;Emacs installation&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/braindump/posts/20240218140133-emacs/&#34;&gt;emacs&lt;/a&gt; export to pdf need package &lt;code&gt;texlive-latexextra&lt;/code&gt;, and &lt;code&gt;texlive-plaingeneric&lt;/code&gt; &lt;a href=&#34;/braindump/posts/20240218135651-latex/&#34;&gt;Latex&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240225102848-rustup/&#34;&gt;rustup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>emacs</title>
      <link>/braindump/posts/20240218140133-emacs/</link>
      <pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/20240218140133-emacs/</guid>
      <description>&lt;p&gt;Emacs is a powerful, extensible, customizable, self-documenting, and free/libre text editor.&lt;/p&gt;
&lt;p&gt;At its core, it is an interpreter for Emacs Lisp, a dialect of the Lisp programming language. This allows users to extend and modify the editor for nearly any task, from programming and writing to email, file management, and personal organization (via &lt;a href=&#34;/braindump/posts/20240221124747-org_mode/&#34;&gt;Org-mode&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It is famously described as &amp;ldquo;a great operating system, lacking only a decent text editor.&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240319220055-org_agenda/&#34;&gt;org-agenda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240223231317-notmuch/&#34;&gt;notmuch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/2025-07-31_20-53-56-org_roam/&#34;&gt;org-roam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240223233042-systemd/&#34;&gt;systemd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240221124553-hugo/&#34;&gt;hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240218135841-archlinux/&#34;&gt;Archlinux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240406031807-blog_my_org_pandoc_workflow_r_emacs/&#34;&gt;[Blog] My Org+Pandoc Workflow : r/emacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Latex</title>
      <link>/braindump/posts/20240218135651-latex/</link>
      <pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate>
      <guid>/braindump/posts/20240218135651-latex/</guid>
      <description>&lt;p&gt;Latex in linux&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/braindump/posts/20240218135841-archlinux/&#34;&gt;Archlinux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
